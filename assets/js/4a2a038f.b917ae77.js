"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[533],{4137:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=r,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4147:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=n(7462),r=(n(7294),n(4137));const i={id:"architect",sidebar_position:3,title:"Architect"},o="Block Overview",s={unversionedId:"Innovate/architect",id:"Innovate/architect",title:"Architect",description:"Alt text",source:"@site/docs/1-Innovate/3-Architect.md",sourceDirName:"1-Innovate",slug:"/Innovate/architect",permalink:"/solution-mq-gitops/Innovate/architect",draft:!1,editUrl:"https://github.com/ibm-client-engineering/solution-mq-gitops.git/docs/1-Innovate/3-Architect.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"architect",sidebar_position:3,title:"Architect"},sidebar:"tutorialSidebar",previous:{title:"Refine",permalink:"/solution-mq-gitops/Innovate/refine"},next:{title:"Prepare",permalink:"/solution-mq-gitops/category/prepare"}},l={},c=[{value:"References",id:"references",level:3},{value:"Instances",id:"instances",level:2},{value:"Instana",id:"instana",level:3}],p={toc:c},u="wrapper";function d(e){let{components:t,...i}=e;return(0,r.kt)(u,(0,a.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"block-overview"},"Block Overview"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Alt text",src:n(8378).Z,width:"1717",height:"1280"})),(0,r.kt)("h1",{id:"environment"},"Environment"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"An AWS account"),(0,r.kt)("li",{parentName:"ul"},"A AWS EKS environment"),(0,r.kt)("li",{parentName:"ul"},"An available eks cluster with ibm-mq ")),(0,r.kt)("h1",{id:"cloud-native-toolkit-operators-and-instances-catalog-for-gitops"},"Cloud Native Toolkit Operators and Instances Catalog for GitOps"),(0,r.kt)("p",null,"This git repository serves as a catalog/library of Operators and Instances of the custom resource(s) provided by the Operators for the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/cloud-native-toolkit/multi-tenancy-gitops"},"GitOps workflow"),".  The Operator and Instance YAMLs are package as a Helm Chart and can be referenced by ArgoCD Applications."),(0,r.kt)("p",null,"The Charts are hosted in the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/cloud-native-toolkit/toolkit-charts"},"Cloud Native Toolkit Helm Repository"),"."),(0,r.kt)("h3",{id:"references"},"References"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"This repository shows the reference architecture for gitops directory structure for more info ",(0,r.kt)("a",{parentName:"li",href:"https://cloudnativetoolkit.dev/adopting/use-cases/gitops/gitops-ibm-cloud-paks"},"https://cloudnativetoolkit.dev/adopting/use-cases/gitops/gitops-ibm-cloud-paks"))),(0,r.kt)("h2",{id:"instances"},"Instances"),(0,r.kt)("h3",{id:"instana"},"Instana"),(0,r.kt)("p",null,"The prerequisites to install the Instana agent are:  "),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Store your Instana Agent Key in a secret in the ",(0,r.kt)("inlineCode",{parentName:"p"},"instana-agent")," namespace. The secret key field should contain ",(0,r.kt)("inlineCode",{parentName:"p"},"key")," and the value contains your Instana Agent Key. Modify the ",(0,r.kt)("inlineCode",{parentName:"p"},"instana-agent.agent.keysSecret")," value in the ",(0,r.kt)("inlineCode",{parentName:"p"},"instances\\instana-agent\\values.yaml")," file to match the secret you deployed. ")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Modify the ",(0,r.kt)("inlineCode",{parentName:"p"},"instana-agent.cluster.name")," value in the ",(0,r.kt)("inlineCode",{parentName:"p"},"instances\\instana-agent\\values.yaml")," file which represents the name that will be assigned to this cluster in Instana.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Modify the ",(0,r.kt)("inlineCode",{parentName:"p"},"instana-agent.zone.name")," value in the ",(0,r.kt)("inlineCode",{parentName:"p"},"instances\\instana-agent\\values.yaml")," file which is the custom zone that detected technologies will be assigned to."))))}d.isMDXComponent=!0},8378:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/MQ-Argo-7f14c1ad7962954bf880632840f37fc2.png"}}]);